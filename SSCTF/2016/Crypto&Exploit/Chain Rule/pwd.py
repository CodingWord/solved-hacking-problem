import os
import pickle
import re
import sys
from Queue import Queue
from zipfile import ZipFile

DIR = 'pwd'

files = []
for filename in os.listdir(DIR):
    files.append(filename)

prev = {}
in_count = {}
out_edge = {}

f = open('dict', 'r')
password_dict = pickle.load(f)
f.close()

for filename in files:
    f = open(os.path.join(DIR, filename))
    content = f.read()
    f.close()

    next_node = []

    result = re.search('next is (\d+)', content)
    if result:
        next_node.append(result.group(1))

    result = re.search('or (\d+)', content)
    if result:
        next_node.append(result.group(1))

    out_edge[filename] = next_node

    if len(next_node) == 0:
        print('%s content - %s' % (filename, content))

    for num in next_node:
        if num not in in_count:
            in_count[num] = 1
        else:
            in_count[num] += 1
        if num + '.txt' not in files:
            print('%s next %s does not exist!' % (filename, num))

for filename in files:
    f = open(os.path.join(DIR, filename))
    content = f.read()
    f.close()

    result = re.match('^next is \d{6}( , or \d{6})? +', content)
    if not result:
        print content

start = '184128'
end = '376831'
visit = set()

q = Queue()

prev[start] = start
q.put(start)
visit.add(start)

while not q.empty():
    now = q.get()
    if now == end:
        break
    for next_node in out_edge[now + '.txt']:
        if next_node not in visit:
            prev[next_node] = now
            q.put(next_node)
            visit.add(next_node)

# backtrack
path = []

now = end
while 1:
    path.append(now)
    next_node = prev[now]
    if now == next_node:
        break
    now = next_node

path = list(reversed(path))

original_zip = ZipFile('crypto2-b7486602.zip')
pwd_zip = ZipFile('pwd.zip')

r = ''
for i in range(len(path)):
    p = path[i]

    f = open(os.path.join(DIR, p + '.txt'))
    content = f.read()
    f.close()

    r += ('0' if pwd_zip.getinfo(p + '.txt').comment == '\x20' else '1')

    if os.path.isfile(os.path.join('zip', p + '.zip')):
        print 'zip file exist - %s' % p

original_zip.close()
pwd_zip.close()

def bits2a(b):
    return ''.join(chr(int(''.join(x), 2)) for x in zip(*[iter(b)]*8))

r = bits2a(r)

print r
print len(r)


# 456494.zip content - This is the end , but NOTHING here. Find "flag" and "pwd".
# 376831.txt content - Follow the path, collect the comments. Avoid the BLACKHOLE! .
# start.txt content - Game begin. next is 184128                                  .
